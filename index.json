[{"uri":"https://manos-al-codigo.github.io/guia/cuentas/correo/","title":"Correo Electrónico","tags":[],"description":"","content":"Para la creación de las demás cuentas, una cuenta de correo electrónico fue creada. Esta cuenta es un correo electrónico de Google para utilizarla en la creación del canal de Youtube y la página de analíticas ya que todos estos son servicios de Google.\nLa dirección de correo de esta cuenta es manosalcodigo20@gmail.com, para obtener la contraseña de esta cuenta, envie un correo electrónico al creador del proyecto.\n"},{"uri":"https://manos-al-codigo.github.io/guia/cuentas/","title":"Cuentas","tags":[],"description":"","content":"Cuentas Asociadas Este proyecto es electrónica en su totalidad y está compuesto por varios servicios. Las cuentas correspondientes a cada uno de estos servicios fueron creadas con una cuenta de correo electrónico creado específicamente para el uso de los colaboradores del proyecto. Si es miembro de la institución Escuela Fiscal Mixta Fray Jodoco Ricke puede enviar un correo electrónico al creador de este proyecto para transmitirle las credenciales requeridas.\nLas cuentas creadas para este proyecto son:\n Correo Electrónico Gmail Canal de YouTube GitHub Organization Google Analytics  "},{"uri":"https://manos-al-codigo.github.io/guia/edicion/requisitos/","title":"Requisitos","tags":[],"description":"","content":"Para contribuir a la edición del sitio principal se necesita principalmente una cuenta en GitHub. Para más información, revise la página del GitHub Organization. Ya teniendo una cuenta en la plataforma con acceso a la organización es que puede empezar a contribuir.\nInstalación de un cliente Git Git es un sistema de control de versiones que permite interactuar con la plataforma GitHub. Normalmente se utiliza con una herramienta de consola pero existen clientes de interfaz gráfica. En este caso, se presenta como instalar GitHub Desktop. Primero, diríjase al sitio de GitHub Desktop y descárguelo haciendo click en el botón Download for \u0026hellip;.\nAl ejecutar el instalador se le presentará una pantalla como esta:\n  Haga click en Sign in to GitHub.com. Se le abrirá una nueva ventana de su navegador de Internet, inicie sesión en GitHub y regrese al instalador.E\nEsta nueva ventana se le presentará.\n  Si sus datos están ingresados correctamente entonces haga click en Continue, sino ingrese en Name su nombre de usuario de GitHub y en Email su dirección de correo electrónico que utilizó para crear su cuenta y luego continue.\nEl instalador habrá entonces acabado y se le presentará con la ventana principal.\n  En la parte derecha usted podrá encontrar todos los repositorios a los cuales tiene acceso. En esta liste, busque manos-al-codigo/manos-al-codigo.github.io y de click en Clone.\n  Esta nueva pantalla se le aparecerá, en Local path seleccione dónde en su computadora desea guardar los datos del sitio. Finalmente, dele click en Clone.\nFinalmente se le presentará esta pantalla:\n  Este es su panel de control del repositorio del sitio. Para saber cómo subir cambios al proyecto, visite esta página.\nInstalación de Hugo Hugo es el servicio utilizado para construir el sitio web en base a archivos de texto formateado en Markdown. Esta herramienta es la que le permite generar un sitio estático y estructurado a través de archivos Markdown sin tener que tocar una línea de código. Normalmente todo se genera automáticamente en la plataforma GitHub por lo que la única razón por la cual usted debería instalar Hugo es para probar el sitio al momento de su edición para asegurarse de que todo funcione bien antes de subir sus cambios.\nPrimeramente se debe descargar Hugo para su sistema operativo. Visite esta página. Se encontrará con una lista de descargas como esta:\n  Seleccione la que corresponda a su sistema operativo. Si se encuentra en Windows (64 Bits) descargue la que se llama hugo_extended_x.x.x_Windows-64bit.zip. Si prefiere descargar la versión utilizada en este proyecto haga click aquí para descargar Hugo para Windows (64 Bits).\nLuego, cree una carpeta llamada bins en su Disco Local C: y transfiera el archivo llamado hugo.exe (que se encuentra en el archivo descargado) a esa carpeta.\n  Ahora haga click derecho en Este PC o This PC y seleccione Propiedades. Se le presentará una ventana como esta:\n  En la parte izquierda, seleccione la opción Opciones de sistema avanzadas o Advanced system settings. Se le presentará otra ventana similar a esta:\n  En la parte superior, haga click en Avanzado y haga click en el botón al final que dice Variables de entorno. Se le presentará otra ventana similar a esta:\n  En la primera lista donde dice Variables de usuario haga doble click en Path. Esta pantalla aparecerá:\n  Haga click en New y escriba:\nC:\\bins Finalmente haga click en OK.\nAhora, abra el menú de inicio y escriba en la barra de búsqueda cmd, abra la opción llamada Símbolo del sistema o Command Prompt, una ventana negra le aparecerá donde podrá escribir comandos para el ordenador. Escriba en esta ventana:\nhugo version Le deberá aparecer un mensaje semejante al siguiente:\n  ¡Listo!, Hugo ha sido instalado en su ordenador. Si al correr el comando mencionado previamente no le aparece un mensaje similar al que aparece en la imagen, vuelva a repetir los pasos previos.\nEditor de Markdown Markdown es el lenguaje de formateo de texto que se utiliza para construir el contenido del sitio. No se necesita un programa especial para editar estos tipos de texto ya que son simplemente archivos de texto que se pueden editar con el bloc de notas. Sin embargo, para que su experiencia sea más placentera, se recomienda utilizar alguno de estos programas:\n Atom Visual Studio Code Sublime Text  Instale el editor de texto de su preferencia para editar estos archivos.\n"},{"uri":"https://manos-al-codigo.github.io/guia/edicion/","title":"Edición del sitio","tags":[],"description":"","content":"Edición del Sitio Este proyecto está diseñado para ser desarrollado continuamente. El sitio principal está creado con Hugo, el cual es un generador de sitios estáticos a partir de archivos de texto Markdown.\nLa edición del contenido del sitio no requiere de escritura de código, sino que debe ser escrito en Markdown, el cual es una forma de estructurar documentos. Luego, GitHub se ocupa automáticamente de construir el sitio y desplegarlo para que sea accesible.\nMás adelante se describe cómo editar el sitio paso a paso.\n"},{"uri":"https://manos-al-codigo.github.io/guia/edicion/sintaxis/","title":"Sintáxis Markdown","tags":[],"description":"","content":"En esta página se presenta un ejemplo de cada forma posible para formatear texto y cómo obtenerlo con Markdown.\nTítulos Los títulos se construyen con un # por cada nivel del título.\nEsto:\n# Título h1 ## Título h2 ### Título h3 #### Título h4 ##### Título h5 ###### Título h6 Se renderiza así:\nTítulo h1 Título h2 Título h3 Título h4 Título h5 Título h6 Reglas horizontales Se puede separar contenido con una regla horizontal con cualquiera de las siguientes opciones:\n--- ___ *** Cada uno de estos se renderiza así:\n Texto normal Un párrafo de texto normal se escribe directamente sin ningún tipo de notación especial.\nEsto:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. Se renderiza así:\nLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\nÉnfasis de texto Negrita Para escribir texto en negrita se lo puede realizar con:\n**esto está en negrita** Lo cual se renderiza así:\nesto está en negrita\nItálicas Para escribir texto en itálica se lo puede realizar con:\n*esto está en itálica* Lo cual se renderiza así:\nesto está en itálica\nAtravesado Para escribir texto atravesado se lo puede realizar con:\n~~esto está en atravesado~~ Lo cual se renderiza así:\nesto está en atravesado\nBloques de paráfrasis Se puede formatear texto como un bloque independiente.\nEsto:\n\u0026gt; Esto es un bloque independiente. Se renderiza así:\n Esto es un bloque independiente.\n Se pueden tener múltiples niveles de estos bloques:\nEsto:\n\u0026gt; Esto es un bloque independiente. \u0026gt; \u0026gt; Y este un bloque interno. Se renderiza así:\n Esto es un bloque independiente.\n Y este un bloque interno.\n  Notas Se puede agregar un recuadro de notas de distintos colores.\nNote Esto:\n{{% notice note %}} Una nota. {{% /notice %}} Se renderiza así:\nUna nota.\n Info Esto:\n{{% notice info %}} Una información. {{% /notice %}} Se renderiza así:\nUna información.\n Tip Esto:\n{{% notice tip %}} Un tip. {{% /notice %}} Se renderiza así:\nUn tip.\n Warning Esto:\n{{% notice warning %}} Una alerta. {{% /notice %}} Se renderiza así:\nUna alerta.\n Listas Sin orden Una lista cuyo orden no importa se puede representar con cualquiera de los siguientes símbolos:\n* Elemento de la lista. - Elemento de la lista. + Elemento de la lista. Un elemento de una lista también puede ser otra lista.\nEsto:\n+ Elemento 1. + Elemento 2. + Elemento 3. - Elemento 3.1. - Elemento 3.2. + Elemento 4. Se renderiza así:\n Elemento 1. Elemento 2. Elemento 3.  Elemento 3.1. Elemento 3.2.   Elemento 4.  Ordenada Una lista cuyo orden importa se puede representar como una lista precedida por números por cada elemento.\nEsto:\n1. Primero 2. Segundo 3. Tercero 4. Cuarto Se renderiza así:\n Primero Segundo Tercero Cuarto  Bloques de código Se puede representar un bloque independiente para mostrar un ejemplo de código.\nBloques en la misma línea Una línea puede contener un ejemplo de código en la misma línea.\nEsto:\nAquí hay un `ejemplo` en la misma línea. Se renderiza así:\nAquí hay un ejemplo en la misma línea.\nBloques de múltiples líneas Un bloque de código independiente se envuelve con ```.\nUn texto envuelto con estos símbolos se renderiza así:\nEsto es un código de múltiples líneas. Subrayado de sintáxis Los bloques de código independientes pueden mostrar código con subrayado de sintáxis en base al lenguaje. Para esto, después del primer ``` que envuelve al código se le especifica el lenguaje del código (Ejemplo: js, html, json\u0026hellip;). Se puede encontrar aquí una lista de los lenguajes soportados.\nUn texto HTML envuelto en estos símbolos se renderiza así:\n\u0026lt;html\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Aquí hay un párrafo en HTML.\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Tablas Se puede representar tablas agregando | entre cada columna y separando la primera fila por --- por cada celda.\nEsto:\n| Primera columna | Segunda columna | | --------------- | --------------- | | Celda 1,1 | Celda 1,2 | | Celda 2,1 | Celda 2,2 | | Celda 3,1 | Celda 3,2 | Se renderiza así:\n   Primera columna Segunda columna     Celda 1,1 Celda 1,2   Celda 2,1 Celda 2,2   Celda 3,1 Celda 3,2    Links (Hipervínculos) Recurso externo Se puede agregar un hipervínculo a un recurso externo.\nEsto:\n[Texto del Link](http://link-al-recurso.com) Se renderiza así:\nTexto del Link\nRecurso interno Se puede agregar un hipervínculo a un recurso interno. El recurso interno se resuelve desde el documento que se está editando.\nSea una estructura de documentos así:\n pagina1.md pagina2/  pagina2-1.md pagina2-2.md    Si desde pagina2-2.md se quiere agregar un hipervínculo a pagina1.md, se realiza esto:\n[Texto del Link]({{\u0026lt; ref \u0026#34;../pagina1.md\u0026#34; \u0026gt;}}) Se renderiza así:\nTexto del Link\nSi el ref apunta a un archivo que no existe, el compilador del sitio mostrará un error.\n Recurso de la misma página Se puede agregar un hipervínculo a un recurso que se encuentra en la misma página. Este recurso debe ser un título en la misma página para el cual se le debe poner todo en minúsculas y reemplazar cualquier espacio por un guión -.\nEsto:\n[Link a la misma página](#énfasis-de-texto) Se renderiza así:\nLink a la misma página\n Este link apunta a la sección Énfasis de texto en esta misma página.\n Imágenes Se puede agregar imágenes a la página.\nImagen externa Una imagen externa es una imagen que no se encuentre guardada en los archivos de este sitio, se obtiene generalmente por su URL.\nEsto:\n![texto para cuando no se puede presentar la imagen](https://raw.githubusercontent.com/manos-al-codigo/assets/master/logo_with_text/logo_with_text_2000x1000-black.png) Se renderiza así:\nImagen interna Una imagen interna es una imagen que se encuentre guardada en los archivos de este sitio, más específicamente adentro de la carpeta static.\nLa dirección de la imagen local se obtiene al sumar las siguientes cosas:\n / Para apuntar al inicio del sitio. En este caso, es https://manos-al-codigo.github.io/ guia/ Si es que el sitio es parte de la guia, en caso contrario no se agrega nada. la dirección/hasta/la/imagen. La dirección para encontrar la imagen desde la carpeta static. Si la imagen se llama analytics_3.png y se encuentra adentro de la carpeta cuentas que está dentro de img que a su vez está adentro de static, la dirección de la imagen será: static/img/cuentas/analytics_3.png.  Esto:\n{{\u0026lt; figure src=\u0026#34;/guia/img/cuentas/analytics_3.png\u0026#34; title=\u0026#34;Páginas más visitadas.\u0026#34; \u0026gt;}} Se renderiza así:\n  Páginas más visitadas.   Desactivar la presentación de la imagen al hacerle click Cuando se le hace click a una imagen en este sitio por lo general se presenta en grande en una ventana independiente. Para eliminar este comportamiento, se agrega: ?featherlight=false al URL de la imagen.\nEsto:\n![texto para cuando no se puede presentar la imagen](https://raw.githubusercontent.com/manos-al-codigo/assets/master/logo_with_text/logo_with_text_2000x1000-black.png?featherlight=false) Se renderiza así:\nHacerle click a la imagen no hace nada.\nCambiar el tamaño de la imagen Por defecto, las imágenes toman su tamaño normal en la página a menos que esta sea muy pequeña para la imagen, en cuyo caso la imagen tomará todo el espacio horizontal que pueda, manteniendo su relación con el tamaño vertical para que no se vea estirada.\nSe puede cambiar el tamaño de la imagen agregando al final de la URL de la imagen ?height=\u0026lt;tamaño\u0026gt; para cambiar la altura de la imagen o ?width=\u0026lt;tamaño\u0026gt; para cambiar su largo. Se pueden encadenar estos parámetros, reemplazando el ? en los parámetros que no sean el primero por \u0026amp;.\nLas unidades del tamaño son las de CSS, más información sobre estas unidades se puede encontrar aquí.\n![texto para cuando no se puede presentar la imagen](https://raw.githubusercontent.com/manos-al-codigo/assets/master/logo_with_text/logo_with_text_2000x1000-black.png?featherlight=false\u0026amp;with=200px\u0026amp;height=100px) Se renderiza así:\nArchivos Adjuntos En varios de las páginas del contenido se puede observar un bloque que dice Archivos Adjuntos y tiene links para descargar estos archivos. Para utilizar este bloque, se debe primeramente subir el contenido que se desea adjuntar al repositorio de assets. Por lo general, se crea una nueva carpeta en contenido con el número de la lección (ejemplo: leccion-4). Para esto, cree una carpeta en su computador llamada contenido y adentro de la misma una nueva carpeta con el nombre de la lección, leccion-1 en este caso. Luego, en la página del repositorio, haga clic en Add File \u0026gt; Upload Files y arrastre la carpeta contenido a la página. Finalmente, en el bloque donde dice Add files via upload, escriba un mensaje pertinente, por ejemplo: \u0026ldquo;Agregado contenido de la lección 1.\u0026rdquo; y termine haciendo clic en Commit changes.\nUna vez que el contenido ya esté subido al repositorio de assets, se puede hacer uso de este bloque de contenido.\nSi se quiere adjuntar el contenido de la carpeta leccion-1 que ese encuentra dentro de contenido del repositorio, se utiliza:\n{{\u0026lt; archivos \u0026#34;contenido/leccion-1\u0026#34; \u0026#34;Que es la computacion.pdf\u0026#34; \u0026#34;Que es la computacion.pptx\u0026#34; \u0026gt;}} Donde el primer bloque entre comillas corresponde al nombre de la carpeta desde la ruta del repositorio. Se usa contenido/leccion-1 porque la carpeta contenido contiene a leccion-1.\nLos bloques siguientes de comillas corresponden al nombre de los archivos, en este caso, dentro de la carpeta leccion-1 se encuentran los archivos siguientes:\n Que es la computacion.pdf Que es la computacion.pptx  Este código se renderiza así:\n  Adjuntos   Que es la computacion.pdf    Que es la computacion.pptx     Videos de YouTube Se pueden agregar videos de YouTube en las páginas. Lo único que se debe conocer es el identificador del video el cual es la cadena alfanumérica al final del link del video.\nEjemplo: Para el video https://www.youtube.com/watch?v=y-C6nRCbkSA el identificador es y-C6nRCbkSA.\nPara agregar el video, se utiliza esto:\n{{\u0026lt; youtube y-C6nRCbkSA \u0026gt;}} Lo cual se renderiza así:\n  "},{"uri":"https://manos-al-codigo.github.io/guia/cuentas/youtube/","title":"YouTube","tags":[],"description":"","content":"El corazón de este proyecto se encuentra en los video cursos que se encuentran en el canal de YouTube. Es aquí donde todo contenido audiovisual es albergado.\nLa credencial para acceder a esta cuenta es la misma que para el correo electrónico ya que YouTube es un servicio propio de Google.\n"},{"uri":"https://manos-al-codigo.github.io/guia/cuentas/github-organization/","title":"Github Organization","tags":[],"description":"","content":"El código correspondiente a este sitio y el principal son de fuente abierta. Por esta razón, se encuentran albergados de manera centralizada en un GitHub Organization. GitHub es un repositorio de proyectos de fuente abierta que brinda múltiples otros servicios, entre ellos, construir y albergar este sitio web.\nLa ventaja del GitHub Organization es que es una cuenta que no está ligada a un correo electrónico. Al contrario, sirve como un usuario-grupo al cual pueden tener acceso múltiples usuarios para colaborar entre ellos en sus repositorios de código.\n¿Cómo unirse al GitHub Organization? Para contribuir en los repositorios, una cuenta en GitHub es necesaria. Si no tiene una, puede crearla haciendo click aquí. Teniendo lista su cuenta, envíe un correo electrónico al creador del proyecto con su nombre de usuario y dirección email para que le pueda conceder acceso de contribuidor.\n¿A qué repositorios tendré acceso? El GitHub Organization contiene los siguientes repositorios de código de fuente abierta:\n manos-al-codigo.github.io - Código fuente del sitio web principal. guia - Código fuente de este sitio guía. actions - Código fuente de los GitHub Actions utilizados en el proyecto, los cuales hacen posible la construcción automática del sitio. assets - Contiene los bienes digitales del proyecto, notablemente los logos utilizados. hugo-theme-learn - Código fuente del tema del sitio utilizado. Versión modificada del original.  "},{"uri":"https://manos-al-codigo.github.io/guia/edicion/manejo-contenido/","title":"Manejo del contenido","tags":[],"description":"","content":"En esta página encontrará una descripción instructiva acerca de la edición de la página principal.\nEstructura del sitio Si siguió los pasos encontrados en Requisitos entonces debería tener ya descargada la carpeta con los archivos del sitio web principal. En esta carpeta encontrará varios sub-directorios, entre ellos:\n .github Esta carpeta contiene un archivo responsable de que la plataforma automatice la construcción del sitio al momento de subirlo a GitHub. No tocar. archtypes Esta carpeta es propia de Hugo y se guardan los tipos de páginas que se pueden crear. No tocar. content En esta carpeta se guardan los archivos de texto que formarán el sitio web. i18n En esta carpeta se guardan configuraciones dependiendo del lenguaje del sitio. El sitio solo soporta el lenguaje español. No tocar. layouts Esta carpeta contiene templetas internas de Hugo. No tocar. resources Esta carpeta contiene archivos multimedia que son generadas por Hugo. No tocar. static Esta carpeta contiene varios archivos que formarán parte de la ruta del sitio. Por lo general se guardan imágenes aquí. themes Esta carpeta contiene los temas estéticos del sitio. No tocar.  Los demás archivos como son .gitignore, .gitmodules, LICENSE y README.md son archivos propios del repositorio y no representan nada en el sitio. config.toml por otro lado es el archivo de configuración del generador del sitio. Por lo general no tiene que editar este archivo.\nAgregar contenido Estructura de content Como se mencionó previamente, este proyecto utiliza Hugo para generar el sitio a partir de archivos de texto formateado en Markdown, no requiere de ningún tipo de código. Los archivos de texto que forman el contenido del sitio se guardan en content.\nAdentro de esta carpeta podrá encontrar algunas sub-carpetas y archivos de formato .md (Markdown). Cada sub-carpeta (incluyendo content) debe de contener un archivo llamado _index.md el cual será el archivo principal para esta ruta. Hay que entender que la estructura de la carpeta content corresponde a la estructura del sitio, es decir que el archivo content/_index.md será accesible a través de https://manos-al-codigo.github.io/, mientras que content/parte1/_index.md y content/parte1/subparte1.md serán accesibles a través de https://manos-al-codigo.github.io/parte1 y https://manos-al-codigo.github.io/parte1/subparte1 respectivamente.\nEl primer nivel de sub-carpetas es usualmente utilizado para los ítems principales del menú lateral izquierdo y los archivos (que no sean _index.md) serán subítems de ese elemento en la barra.\nPara que sirva de ejemplo, la estructura de la carpeta content de esta página es:\n _index.md cuentas/  _index.md correo.md youtube.md github-organization.md google-analytics.md   edicion/  _index.md requisitos.md sintaxis.md manejo-contenido.md     Nótese que están listados en el orden de aparición para mejor visualización.\n Iniciar el cliente git y crear una rama nueva Antes de comenzar a editar el sitio, debe de abrir el cliente git GitHub Desktop que se instaló previamente (si no lo ha hecho, diríjase a Requisitos). Asegúrese de que en la parte superior izquierda diga manos-al-codigo.github.io.\nLe deberá aparecer una ventana tal como esta:\n  Luego, haga click en el botón superior del medio que dice Current branch. Una ventana listando todas las ramas del proyecto deberá aparecer:\n   La imagen muestra que actualmente existe la rama master la cual es la principal y es ahi donde se tendrá que mover todos los cambios cuando estos ya estén listos.\n Dele click al botón New branch o Nueva rama e ingrese un nombre pertinente a los cambios que va a realizar (tenga en cuenta que este nombre no puede incluir espacios).\n  Finalmente se regresará a la ventana inicial con el botón del medio superior donde dice Current branch con el nombre de la rama recién creada.\n  Listo, ahora usted está listo para editar el contenido del proyecto. Puede dejar esta ventana abierta o cerrarla si desea.\nCreación del archivo Cabecera El archivo debe tener una cabecera que va a especificar la metadata de la página. Si se trata de una página que en la barra lateral deba de ser un ítem principal (como 1. Cuentas y 2. Edición del sitio en este caso), se debe de agregar la siguiente cabecera:\n+++ title = \u0026#34;Título de página (aparece como el nombre del ítem en la barra lateral)\u0026#34; chapter = true weight = 1 # Reemplace este número por el número del orden en la que deba de aparecer. Borre el texto a partir del símbolo #. pre = \u0026#34;\u0026lt;b\u0026gt;1. \u0026lt;/b\u0026gt;\u0026#34; # Reemplace el número por el mismo que puso arriba. Borre el texto a partir del símbolo #. +++ Para otro tipo de archivos, la cabecera debería ser:\n+++ title = \u0026#34;Título de la sub-página\u0026#34; weight = 1 # Reemplace este número por el número del orden en la que deba de aparecer. Borre el texto a partir del símbolo #. +++ Contenido Después de agregar la cabecera usted está listo para incluir cualquier tipo de contenido que desee escribir. Para una descripción de la sintáxis que se debe seguir para estructurar estos archivos, diríjase a Sintáxis Markdown para más información.\nProbar la página localmente Antes de subir sus cambios debería asegurarse de que el sitio puede generarse sin ningún tipo de error y que el contenido se muestre apropiadamente. Para eso, abra la carpeta principal del sitio manos-al-codigo.github.io donde la haya guardado en su computadora.\nLuego, mientras mantiene el botón SHIFT IZQUIERDO haga click derecho en cualquier lado adentro de la carpeta (no le haga click derecho a un archivo sino al espacio vacío). Entre las opciones que tiene, haga click en Abrir ventana PowerShell aquí.\nEn la nueva ventana azul que apareció, copie y pegue el siguiente comando:\nhugo server --minify --ignoreCache Le deberá aparecer una ventana semejante a esta:\n  Cuando obtenga este mensaje, usted podrá acceder en su navegador a la página web localmente en http://localhost:1313. Mientras que esta ventana esté abierta, usted podrá hacer cualquier cambio en los archivos del sitio y la página web en su navegador su actualizará automáticamente.\nGuardar los cambios en el cliente git Mientras vaya editando el sitio, es recomendable ir guardando sus cambios en el cliente git de vez en cuando. Por lo general cuando haya terminado de cambiar un archivo, guárdelo en el cliente y siga con su trabajo.\nCuando tenga cambios guardados, los podrá ver en el cliente GitHub Desktop:\n  La barra lateral izquierda muestra todos los archivos que han sido cambiados y la derecha muestra una comparación entre la versión vieja y nueva.\nPara guardar sus cambios, escriba una descripción de lo que está guardando donde dice Escriba una descripción aquí y luego haga click en el botón Commit to nommbre-de-la-rama. Asegúrese de que el botón tenga el nombre de su rama recién creada y que no diga master.\nListo, sus cambios han sido guardados (pero no subidos todavía). Cuando siga haciendo cambios en esta misma rama, repita el proceso que realizo en esta sección.\nSubir los cambios a la plataforma Ya cuando haya terminado sus cambios y haya guardado todo lo que ha hecho, está usted listo para subir esos cambios a la plataforma. En el mismo cliente GitHub Desktop, después de haber guardado su último cambio, se le presentará una pantalla así:\n  De click en el botón que dice Push origin para subir sus cambios a la plataforma.\nUna vez subidos, tendrá una nueva opción como lo presenta la pantalla siguiente:\n  De click en el botón que dice Create Pull Request, una nueva ventana en su navegador se abrirá como esta:\n  Donde dice Escriba una corta descripción aquí debe usted escribir una descripción de los cambios que ha hecho (Ejemplo: nueva página del curso creada). En la caja inferior puede usted escribir una descripción más amplia de sus cambios (esto es opcional). Cuando esté listo, de click en el botón Create pull request.\nDespués, se le aparecerá una lista de nueva información acerca de su rama. Al final, encontrará un botón que dice Merge pull request.\n  Una vez aplastado, se le presentará una confirmación. De click en Confirm merge.\n  Ya cuando la página se haya tornado morada con el texto Merged, le puede dar click al botón que dice Delete branch para remover la rama de la plataforma. Hasta este entonces sus cambios ya se han integrado en la rama principal del proyecto.\n  Finalmente, sus cambios estarán disponibles en el sitio principal después de algunos minutos.\n  Si por alguna razón sus cambios no se ven reflejados, vaya a la página del repositorio y de click en la pestaña llamada Actions. Se le presentará una página similar a esta: Si su cambio se muestra con una cruz roja, significa que algo sucedió al momento de generar el sitio. Trate de probar su sitio en su propia máquina y mire si funciona. Para cambio que deba realizar debe de reproducir los pasos para guardar y subir.\n Qué hacer después de subir Después de haber subido sus cambios y que estos estén reflejados en el sitio principal, regrese al cliente GitHub Desktop y en la parte superior en el medio, de click al botón Current branch y cámbiese a master.\n  Luego, en la parte superior, de click en el tercer botón que dice Fetch origin. Después de haberse cargado, este botón cambiará a Pull origin, de click nuevamente.\n  Después de haber realizado esto, estará listo para reproducir los pasos vistos en las secciones iniciar el cliente, guardar los cambios y subir los cambios para cada cambio subsiguiente que vaya a realizar.\n"},{"uri":"https://manos-al-codigo.github.io/guia/cuentas/google-analytics/","title":"Google Analytics","tags":[],"description":"","content":"Google Analytics es un sistema de analíticas que ofrece datos en tiempo de real sobre los visitantes a la página. Siendo un servicio propio de Google, las credenciales para acceder al tablero de analíticas son las mismas que para el Correo Electrónico Gmail.\nEste sistema sirve para obtener retroalimentación sobre los usuarios de la página. Conocer la demográfica de los visitantes es información muy valiosa para saber en qué se debe enfocar el sitio.\nEntre algunas de las informaciones que entrega Google Analytics se encuentran:\n  Cantidad de usuarios en línea en tiempo real.     Horario de visita y ubicación de usuarios.     Páginas más visitadas.   "},{"uri":"https://manos-al-codigo.github.io/guia/","title":"","tags":[],"description":"","content":"Bienvenidos al sitio guía del proyecto Manos al Código.\nEsta página es una guía de uso y modificación de la página principal, incluye información acerca de las cuentas creadas específicamente para el proyecto, una descripción de su uso y finalmente, una guía para la edición del contenido del sitio principal.\nEsta guía va dirigida a cualquier persona miembro de la Escuela Fiscal Mixta Fray Jodoco Ricke que desee contribuir al proyecto, agregando o modificando el contenido del curso. Este proyecto está diseñado para que la edición del sitio pueda realizarse por cualquier persona y no dependa del creador inicial.\n"},{"uri":"https://manos-al-codigo.github.io/guia/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://manos-al-codigo.github.io/guia/tags/","title":"Tags","tags":[],"description":"","content":""}]